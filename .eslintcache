[{"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\index.js":"1","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\App.js":"2","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\pages\\index.js":"3","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\pages\\MainPage.jsx":"4","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\Modal.js":"5","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\store.js":"6","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\index.js":"7","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\pages\\BoardPage.js":"8","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\lists.js":"9","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\index.js":"10","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\lists.js":"11","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\board.js":"12","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\cards.js":"13","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\board.js":"14","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\activeBoard.js":"15","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\cards.js":"16","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\boardOrder.js":"17","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloList.js":"18","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloCreate.js":"19","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloCard.js":"20","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloButton.js":"21","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloForm.js":"22","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloOpenForm.js":"23"},{"size":317,"mtime":1610920405956,"results":"24","hashOfConfig":"25"},{"size":346,"mtime":1610914222043,"results":"26","hashOfConfig":"25"},{"size":96,"mtime":1610881418762,"results":"27","hashOfConfig":"25"},{"size":2224,"mtime":1610964949420,"results":"28","hashOfConfig":"25"},{"size":455,"mtime":1610798285363,"results":"29","hashOfConfig":"25"},{"size":479,"mtime":1610965123138,"results":"30","hashOfConfig":"25"},{"size":364,"mtime":1610883175569,"results":"31","hashOfConfig":"25"},{"size":2589,"mtime":1610964920775,"results":"32","hashOfConfig":"25"},{"size":2381,"mtime":1610920885190,"results":"33","hashOfConfig":"25"},{"size":76,"mtime":1610899917131,"results":"34","hashOfConfig":"25"},{"size":1231,"mtime":1610901968003,"results":"35","hashOfConfig":"25"},{"size":343,"mtime":1610901936871,"results":"36","hashOfConfig":"25"},{"size":510,"mtime":1610901969114,"results":"37","hashOfConfig":"25"},{"size":1652,"mtime":1610965255842,"results":"38","hashOfConfig":"25"},{"size":272,"mtime":1610921034614,"results":"39","hashOfConfig":"25"},{"size":851,"mtime":1610920911245,"results":"40","hashOfConfig":"25"},{"size":292,"mtime":1610920823267,"results":"41","hashOfConfig":"25"},{"size":2597,"mtime":1610964662601,"results":"42","hashOfConfig":"25"},{"size":1734,"mtime":1610919559163,"results":"43","hashOfConfig":"25"},{"size":1963,"mtime":1610964725003,"results":"44","hashOfConfig":"25"},{"size":407,"mtime":1610898919401,"results":"45","hashOfConfig":"25"},{"size":1031,"mtime":1610964294833,"results":"46","hashOfConfig":"25"},{"size":679,"mtime":1610919862407,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"unq287",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\index.js",[],["98","99"],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\App.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\pages\\index.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\pages\\MainPage.jsx",["100","101"],"import React, {useState} from \"react\";\r\nimport Modal from '../components/Modal'\r\nimport {connect} from 'react-redux'\r\nimport {addBoard} from \"../action/\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport Cross from '../img/Cross.png'\r\n\r\nfunction MainPage({boards, boardOrder, dispatch }) {\r\n    const [visibleList, setVisibleList] = useState(false)\r\n    const [modalActive, setModalActive]= useState(false)\r\n    const [inputValue, setInputValue]= useState('');\r\n    const addList=()=>{\r\n        if(!inputValue){\r\n          setModalActive(true)\r\n          return;\r\n        }\r\n      dispatch(addBoard(inputValue));\r\n      setInputValue('');\r\n      setVisibleList(!visibleList)\r\n    }\r\n    const renderBoards = () => {\r\n      return boardOrder.map((ID) => {\r\n        const board = boards[ID];\r\n    \r\n        return (\r\n          <Link\r\n            key={ID}\r\n            to={`/${board.id}`}\r\n            style={{ textDecoration: \"none\" }}>\r\n            <li key={board.id}>{board.title}</li>\r\n          </Link>\r\n        );\r\n      });\r\n    }\r\n    \r\n    return(\r\n    <>\r\n      <div className=\"bloc-smile\">\r\n      <a className=\"smile\"></a>\r\n      </div>\r\n      <div className=\"content\">\r\n        <div className='main-block'>\r\n          <div className=\"main-header\" onClick={()=>setVisibleList(!visibleList)}>\r\n            <img src={Cross} alt=\"\"></img>\r\n            <p>Новая доска</p>\r\n          </div>\r\n            {visibleList && <div className='creating-list'>\r\n              <p>Название доски</p>\r\n              <input type=\"text\" value={inputValue} onChange={e=>setInputValue(e.target.value)}></input>\r\n              <button className=\"button-cancel\" onClick={()=>setVisibleList(!visibleList)}>Отмена</button>\r\n              <button className=\"button-save\" onClick={addList}>Сохранить</button>\r\n            </div>}\r\n        </div>\r\n        <div className='my-list'>\r\n        <ul>\r\n          {renderBoards()}\r\n        </ul>\r\n        </div>\r\n      </div>\r\n      <Modal active={modalActive} setActive={setModalActive}/>\r\n  </>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  boards: state.boards,\r\n  boardOrder: state.boardOrder\r\n});\r\n\r\nexport default connect(mapStateToProps)(MainPage);","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\Modal.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\store.js",["102"],"import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport {  persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport default () => {\r\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\r\n  return { store };\r\n};","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\index.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\pages\\BoardPage.js",["103","104","105"],"import React, { PureComponent } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { sort, setActiveBoard } from \"../action\";\r\n\r\n\r\nimport TrelloList from \"../components/TrelloList\";\r\nimport TrelloCreate from \"../components/TrelloCreate\";\r\n\r\n\r\nclass BoardPage extends PureComponent {\r\n    componentDidMount() {\r\n      const { boardID } = this.props.match.params;\r\n      this.props.dispatch(setActiveBoard(boardID));\r\n    }\r\n    onDragEnd = result => {\r\n      const { destination, source, draggableId, type } = result;\r\n  \r\n      if (!destination) {\r\n        return;\r\n      }\r\n  \r\n      this.props.dispatch(\r\n        sort(\r\n          source.droppableId,\r\n          destination.droppableId,\r\n          source.index,\r\n          destination.index,\r\n          draggableId,\r\n          type\r\n        )\r\n      );\r\n    };\r\n  \r\n    render() {\r\n      const { lists, cards, match, boards } = this.props;\r\n      const { boardID } = match.params;\r\n      const board = boards[boardID];\r\n      const listOrder = board.lists;\r\n  \r\n      return (\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <div className=\"bloc-smile\">\r\n            <Link to=\"/\"><a className=\"smile\"></a></Link>\r\n            </div>\r\n            <h2 className='name-board'>{board.title}</h2>\r\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n              <div className='lists-container'\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {listOrder.map((listID, index) => {\r\n                  const list = lists[listID];\r\n                  if (list) {\r\n                    const listCards = list.cards.map(cardID => cards[cardID]);\r\n                    return (\r\n                      <TrelloList\r\n                        listID={list.id}\r\n                        key={list.id}\r\n                        title={list.title}\r\n                        cards={listCards}\r\n                        index={index}\r\n                      />\r\n                    );\r\n                  }\r\n                })}\r\n                {provided.placeholder}\r\n                <TrelloCreate list />\r\n            </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    lists: state.lists,\r\n    cards: state.cards,\r\n    boards: state.boards\r\n  });\r\n  \r\n  export default connect(mapStateToProps)(BoardPage);","C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\lists.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\index.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\lists.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\board.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\action\\cards.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\board.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\activeBoard.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\cards.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\reducers\\boardOrder.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloList.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloCreate.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloCard.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloButton.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloForm.js",[],"C:\\Users\\Vitalik\\Desktop\\react-trello\\src\\components\\TrelloOpenForm.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":40,"column":7,"nodeType":"112","endLine":40,"endColumn":28},{"ruleId":"113","severity":1,"message":"114","line":40,"column":7,"nodeType":"112","endLine":40,"endColumn":28},{"ruleId":"115","severity":1,"message":"116","line":15,"column":1,"nodeType":"117","endLine":18,"endColumn":3},{"ruleId":"110","severity":1,"message":"111","line":45,"column":26,"nodeType":"112","endLine":45,"endColumn":47},{"ruleId":"113","severity":1,"message":"114","line":45,"column":26,"nodeType":"112","endLine":45,"endColumn":47},{"ruleId":"118","severity":1,"message":"119","line":54,"column":48,"nodeType":"120","messageId":"121","endLine":54,"endColumn":50},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]